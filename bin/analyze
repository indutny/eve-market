#!/usr/bin/env node

'use strict';

const argv = require('yargs')
    .usage('Usage: $0 --meta data/meta.json --from data/region.json ' +
               '--to data/region.json')
    .alias('c', 'config')
    .demand([ 'config', 'meta', 'from', 'to' ])
    .argv;

const table = require('table')['default'];
const eve = require('../');
const analyzer = eve.Analyzer.create();

const readJSON = eve.utils.readJSON;

const meta = readJSON(argv.meta);
const from = readJSON(argv.from);
const to = readJSON(argv.to);
const config = readJSON(argv.config);

analyzer.runInter(meta, from, to, config, function(err, out) {
  if (err)
    throw err;

  const isk = (value) => {
    let out = Math.floor(value).toString();
    let frac = Math.floor((value * 100) % 100).toString();

    for (let i = out.length - 3; i > 0; i -= 3)
      out = out.slice(0, i) + '\'' + out.slice(i);

    return `${out}.${frac} ISK`;
  };

  // Format output
  const rows = [
    [
      'name', 'profit', 'funds required', 'volume', 'm3',
      'sell price', 'sell volume', 'sell min volume', 'sell location',
      'buy price', 'buy volume', 'buy min volume', 'buy location'
    ]
  ];
  for (let i = 0; i < out.length; i++) {
    const row = out[i];

    rows.push([
      row.name, isk(row.profit), isk(row.buyFor),
      Math.floor(row.volume), Math.floor(row.volume * row.itemVolume) + ' m3',

      isk(row.sell.price), Math.floor(row.sell.volume),
      row.sell.minVolume,
      row.sell.location.name,

      isk(row.buy.price), Math.floor(row.buy.volume),
      row.buy.minVolume,
      row.buy.location.name
    ]);
  }
  console.log(table(rows));
});
